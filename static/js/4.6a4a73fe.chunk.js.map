{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormConstructor","input","meta","error","touched","children","hasError","className","s","formControler","errText","Textarea","props","restProps","Input","createForm","placeholder","name","component","validators","text","validate","module","exports","required","value","maxLengthConstructor","max","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","AuthRedirectComponent","this","to","React","connect","Post","message","likes","posts","post","alt","src","user","maxLength10","MyPosts","memo","profilePage","addPost","postsElements","map","p","id","postsBlock","MyPostsReduxForm","onSubmit","data","postText","reduxForm","form","handleSubmit","MyPostsContainer","dispatch","action","ProfileStatusWithHooks","propStatus","updateUserStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","aboutMe","onChange","e","currentTarget","autoFocus","onBlur","ProfileDataFormRedux","profile","aboutUser","keys","contacts","key","workStatus","type","ProfileData","isOwner","goToEditMode","contactTitle","contactValue","lookingForAJob","lookingForAJobDescription","Contact","href","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","photoAndName","photo","photos","large","userDefaultPhoto","photoLable","for","customInputFile","target","files","fullName","formData","then","initialValues","Profile","content","ProfileContainer","userId","match","params","authUserId","history","getProfile","getUserStatus","refreshProfile","prevProps","mapDispatchToProps","compose","withRouter"],"mappings":"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","file":"static/js/4.6a4a73fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nconst FormConstructor = ({ input, meta: { error, touched }, children }) => {\r\n  const hasError = error && touched;\r\n  return (\r\n    <div className={s.formControler + \" \" + (hasError ? s.error : \"\")}>\r\n      <div>{children}</div>\r\n      {hasError && <div className={s.errText}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport const Textarea = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormConstructor {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormConstructor>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormConstructor {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormConstructor>\r\n  );\r\n};\r\n\r\nexport const createForm = (\r\n  placeholder,\r\n  name,\r\n  component,\r\n  validators,\r\n  props = {},\r\n  text = \"\"\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        component={component}\r\n        validate={validators}\r\n        {...props}\r\n      />{\" \"}\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControler\":\"FormsControls_formControler__2SE9W\",\"error\":\"FormsControls_error__tWJpB\",\"errText\":\"FormsControls_errText__3cYxS\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthConstructor = (max) => (value) => {\r\n  if (value && value.length < max) return undefined;\r\n  return `Max length is ${max} symbols`;\r\n};\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class AuthRedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectWithAuthRedirect = connect(mapStateToProps)(AuthRedirectComponent);\r\n  return ConnectWithAuthRedirect;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallImg\":\"ProfileInfo_wallImg__6eFSx\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1eg9Z\",\"fullName\":\"ProfileInfo_fullName__3_pZy\",\"aboutMe\":\"ProfileInfo_aboutMe__PxFKG\",\"photo\":\"ProfileInfo_photo__1kjc5\",\"customInputFile\":\"ProfileInfo_customInputFile__1eicu\",\"photoLable\":\"ProfileInfo_photoLable__JqkZX\",\"workStatus\":\"ProfileInfo_workStatus__3HnV6\",\"error\":\"ProfileInfo_error__1qPI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3O9aF\",\"postsBlock\":\"MyPosts_postsBlock__2rut_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__4E7cZ\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport user from \"../../../../assets/img/user.png\";\r\n\r\nconst Post = ({ message, likes }) => {\r\n  return (\r\n    <div>\r\n      <div className={s.posts}>\r\n        <div className={s.post}>\r\n          <img alt=\"user\" src={user} />\r\n          {message}\r\n        </div>\r\n        <span>Like {likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthConstructor,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { createForm, Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthConstructor(10);\r\nconst MyPosts = React.memo(({ profilePage, addPost }) => {\r\n  const postsElements = profilePage.posts.map((p) => (\r\n    <Post id={p.id} message={p.message} likes={p.likes} />\r\n  ));\r\n\r\n  const addNewPost = (data) => {\r\n    addPost(data.postText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <MyPostsReduxForm onSubmit={addNewPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst MyPostsForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createForm(\"Enter your message\", \"postText\", Textarea, [\r\n        required,\r\n        maxLength10,\r\n      ])}\r\n\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: \"myPosts\" })(MyPostsForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPost } from \"../../../redux/reducers/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (post) => {\r\n      let action = addPost(post);\r\n      dispatch(action);\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState, useEffect } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\n\nconst ProfileStatusWithHooks = ({ propStatus, updateUserStatus }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(propStatus);\n\n  useEffect(() => {\n    setStatus(propStatus);\n  }, [propStatus]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    updateUserStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div onClick={activateEditMode} className={s.aboutMe}>\n          <span>\n            <b>Status: </b>\n            {status || \"------\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div className={s.aboutMe}>\n          <span>\n            <input\n              onChange={onStatusChange}\n              autoFocus={true}\n              onBlur={deactivateEditMode}\n              value={status}\n            />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {\r\n  createForm,\r\n  Input,\r\n  Textarea,\r\n} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\r\n  debugger;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={s.aboutUser}>\r\n        <div>\r\n          <h3>Contacts</h3>\r\n          {Object.keys(profile.contacts).map((key) => (\r\n            <div key={key}>\r\n              <b>{key}: </b> {createForm(key, \"contacts.\" + key, Textarea, [])}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className={s.workStatus}>\r\n          <h3>Work status</h3>\r\n          <div>\r\n            <b>Full name: </b>{\" \"}\r\n            {createForm(\"Full name\", \"fullName\", Textarea, [])}\r\n          </div>\r\n          <div>\r\n            <b>About me: </b> {createForm(\"About me\", \"aboutMe\", Textarea, [])}\r\n          </div>\r\n          <div>\r\n            <b>My skills: </b>{\" \"}\r\n            {createForm(\"My skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n          </div>\r\n          <div>\r\n            <b>Job hunting: </b>{\" \"}\r\n            {createForm(\"\", \"lookingForAJob\", Input, [], { type: \"checkbox\" })}\r\n          </div>\r\n          {error && <div className={s.error}>{error}</div>}\r\n          <div>\r\n            <button>Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst ProfileDataFormRedux = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormRedux;\r\n","import React, { useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport userDefaultPhoto from \"./../../../assets/img/user.png\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateUserStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const changePhoto = ({ target }) => {\n    if (target.files.length) {\n      savePhoto(target.files[0]);\n    }\n  };\n\n  let onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <div className={s.photoAndName}>\n          <img\n            alt=\"profile\"\n            className={s.photo}\n            src={\n              profile.photos.large != null\n                ? profile.photos.large\n                : userDefaultPhoto\n            }\n          />\n          {isOwner && (\n            <div>\n              <label className={s.photoLable} for=\"fileElem\">\n                Update photo\n              </label>\n              <input\n                id=\"fileElem\"\n                className={s.customInputFile}\n                type={\"file\"}\n                onChange={changePhoto}\n              />\n            </div>\n          )}\n          <div className={s.fullName}>{profile.fullName}</div>\n          <ProfileStatusWithHooks\n            propStatus={status}\n            updateUserStatus={updateUserStatus}\n          />\n        </div>\n\n        {editMode ? (\n          <ProfileDataForm\n            onSubmit={onSubmit}\n            profile={profile}\n            initialValues={profile}\n          />\n        ) : (\n          <ProfileData\n            goToEditMode={() => setEditMode(true)}\n            isOwner={isOwner}\n            profile={profile}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div className={s.aboutUser}>\n      <div>\n        <h3>Contacts</h3>\n        {Object.keys(profile.contacts).map((key) => (\n          <Contact\n            key={key}\n            contactTitle={key}\n            contactValue={profile.contacts[key]}\n          />\n        ))}\n      </div>\n      <div className={s.workStatus}>\n        <h3>Work status</h3>\n        <div>\n          <b>About me: </b> {profile.aboutMe}\n        </div>\n        <div>\n          <b>Job hunting: </b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\n        </div>\n        <div>\n          <b>My skills: </b>\n          {profile.lookingForAJobDescription}\n        </div>\n        {isOwner && <button onClick={goToEditMode}>Edit</button>}\n      </div>\n    </div>\n  );\n};\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div>\n      <b>{contactTitle}: </b>\n      <a href={contactValue}>{contactValue}</a>\n    </div>\n  );\n};\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from \"./Profile.module.css\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer.jsx\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = ({\n  profile,\n  status,\n  updateUserStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  return (\n    <div className={s.content}>\n      <ProfileInfo\n        saveProfile={saveProfile}\n        savePhoto={savePhoto}\n        isOwner={isOwner}\n        profile={profile}\n        status={status}\n        updateUserStatus={updateUserStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {\n  getProfile,\n  getUserStatus,\n  savePhoto,\n  saveProfile,\n  updateUserStatus,\n} from \"../../redux/reducers/profileReducer\";\nimport { withRouter } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authUserId;\n      if (!userId) userId = this.props.history.push(\"/login\");\n    }\n    this.props.getProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId)\n      this.refreshProfile();\n  }\n  render() {\n    if (!this.props.profile) {\n      return <Preloader />;\n    }\n\n    return (\n      <Profile\n        {...this.props}\n        saveProfile={this.props.saveProfile}\n        savePhoto={this.props.savePhoto}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateUserStatus={this.props.updateUserStatus}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authUserId: state.auth.id,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nlet mapDispatchToProps = {\n  getProfile,\n  getUserStatus,\n  updateUserStatus,\n  savePhoto,\n  saveProfile,\n};\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}